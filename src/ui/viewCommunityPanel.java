/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;
import Model.City;
import Model.Community;
import Model.CommunityDirectory;
import Model.Doctor;
import Model.Hospital;
import Model.HospitalDirectory;
import Model.House;
import Model.HouseDirectory;
import java.awt.Component;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Swapnil
 */
public class viewCommunityPanel extends javax.swing.JPanel {

   HospitalDirectory hospitalDirectory;
    HouseDirectory houseDirectory;
    ArrayList<City> cityList;
    CommunityDirectory communityDirectory;
    
    public viewCommunityPanel(HospitalDirectory hospitalDirectory, HouseDirectory houseDirectory, ArrayList<City> cityList
    , CommunityDirectory communityDirectory) {
        initComponents();
        this.hospitalDirectory = hospitalDirectory;
        this.houseDirectory = houseDirectory;
        this.cityList = cityList;
        this.communityDirectory = communityDirectory;
        populateTable();
        populateHouseTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        commLoginPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        txtuserName = new javax.swing.JTextField();
        lblUserName1 = new javax.swing.JLabel();
        loginBtn3 = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        commChoosePanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        hosDirBtn = new javax.swing.JButton();
        hosDirBtn1 = new javax.swing.JButton();
        BtnLogout = new javax.swing.JButton();
        commPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewHosTable = new javax.swing.JTable();
        btnUpdatePerson = new javax.swing.JButton();
        lblFname = new javax.swing.JLabel();
        lblLname = new javax.swing.JLabel();
        txtHosName = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtStrength = new javax.swing.JTextField();
        lblComm = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        btnAddHos = new javax.swing.JButton();
        btnSaveUpdate = new javax.swing.JButton();
        txthosID = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        BtnBack = new javax.swing.JButton();
        cityComboBox = new javax.swing.JComboBox<>();
        commComboBox = new javax.swing.JComboBox<>();
        lblStrength = new javax.swing.JLabel();
        commHousePanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewHouseTable = new javax.swing.JTable();
        lblHouseId = new javax.swing.JLabel();
        txthouseId = new javax.swing.JLabel();
        lblHouseName = new javax.swing.JLabel();
        txtHouseName = new javax.swing.JTextField();
        lblHouseComm = new javax.swing.JLabel();
        lblHouseCity = new javax.swing.JLabel();
        btnAddHouse = new javax.swing.JButton();
        btnUpdateHouse = new javax.swing.JButton();
        btnSaveHouseUpdate = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnDeleteHouse = new javax.swing.JButton();
        BtnBack1 = new javax.swing.JButton();
        cityComboBox1 = new javax.swing.JComboBox<>();
        commComboBox1 = new javax.swing.JComboBox<>();

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Community Admin Login");

        lblUserName.setText("Username:");

        lblUserName1.setText("Password:");

        loginBtn3.setBackground(new java.awt.Color(204, 255, 204));
        loginBtn3.setText("Login");
        loginBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtn3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout commLoginPanelLayout = new javax.swing.GroupLayout(commLoginPanel);
        commLoginPanel.setLayout(commLoginPanelLayout);
        commLoginPanelLayout.setHorizontalGroup(
            commLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commLoginPanelLayout.createSequentialGroup()
                .addGroup(commLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(commLoginPanelLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel2))
                    .addGroup(commLoginPanelLayout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addGroup(commLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(commLoginPanelLayout.createSequentialGroup()
                                .addComponent(lblUserName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtuserName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(commLoginPanelLayout.createSequentialGroup()
                                .addComponent(lblUserName1)
                                .addGroup(commLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(commLoginPanelLayout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(loginBtn3))
                                    .addGroup(commLoginPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(254, Short.MAX_VALUE))
        );
        commLoginPanelLayout.setVerticalGroup(
            commLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commLoginPanelLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jLabel2)
                .addGap(50, 50, 50)
                .addGroup(commLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserName)
                    .addComponent(txtuserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(commLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserName1)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(loginBtn3)
                .addContainerGap(286, Short.MAX_VALUE))
        );

        jLayeredPane1.add(commLoginPanel, "card2");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Community Admin");

        hosDirBtn.setText("Hospital Directory");
        hosDirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hosDirBtnActionPerformed(evt);
            }
        });

        hosDirBtn1.setText("House Directory");
        hosDirBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hosDirBtn1ActionPerformed(evt);
            }
        });

        BtnLogout.setBackground(new java.awt.Color(0, 204, 204));
        BtnLogout.setText("Logout");
        BtnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout commChoosePanelLayout = new javax.swing.GroupLayout(commChoosePanel);
        commChoosePanel.setLayout(commChoosePanelLayout);
        commChoosePanelLayout.setHorizontalGroup(
            commChoosePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, commChoosePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(commChoosePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(hosDirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(hosDirBtn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(232, 232, 232))
            .addGroup(commChoosePanelLayout.createSequentialGroup()
                .addGroup(commChoosePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(commChoosePanelLayout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jLabel4))
                    .addGroup(commChoosePanelLayout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(BtnLogout)))
                .addContainerGap(298, Short.MAX_VALUE))
        );
        commChoosePanelLayout.setVerticalGroup(
            commChoosePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commChoosePanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel4)
                .addGap(56, 56, 56)
                .addComponent(hosDirBtn)
                .addGap(28, 28, 28)
                .addComponent(hosDirBtn1)
                .addGap(57, 57, 57)
                .addComponent(BtnLogout)
                .addContainerGap(245, Short.MAX_VALUE))
        );

        jLayeredPane1.add(commChoosePanel, "card2");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Community Admin");

        viewHosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hospital ID", "Hospital Name", "Capacity", "Community Address", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewHosTable);

        btnUpdatePerson.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        btnUpdatePerson.setText("Update");
        btnUpdatePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePersonActionPerformed(evt);
            }
        });

        lblFname.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        lblFname.setText("Hospital ID:");

        lblLname.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        lblLname.setText("Hospital Name:");

        txtHosName.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        txtHosName.setForeground(new java.awt.Color(153, 153, 0));
        txtHosName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHosNameActionPerformed(evt);
            }
        });
        txtHosName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHosNameKeyReleased(evt);
            }
        });

        lblAge.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        lblAge.setText("Capacity:");

        txtStrength.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        txtStrength.setForeground(new java.awt.Color(153, 153, 0));
        txtStrength.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtStrengthKeyReleased(evt);
            }
        });

        lblComm.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        lblComm.setText("Community:");

        lblCity.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        lblCity.setText("City:");

        btnAddHos.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        btnAddHos.setText("Add Hospital");
        btnAddHos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHosActionPerformed(evt);
            }
        });

        btnSaveUpdate.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        btnSaveUpdate.setText("Save Updates");
        btnSaveUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveUpdateActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Hospital Directory");

        BtnBack.setText("Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        cityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "New York" }));
        cityComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityComboBoxActionPerformed(evt);
            }
        });

        commComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));
        commComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commComboBoxActionPerformed(evt);
            }
        });

        lblStrength.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblStrength.setForeground(new java.awt.Color(0, 102, 102));

        javax.swing.GroupLayout commPanelLayout = new javax.swing.GroupLayout(commPanel);
        commPanel.setLayout(commPanelLayout);
        commPanelLayout.setHorizontalGroup(
            commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(commPanelLayout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(btnAddHos)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(commPanelLayout.createSequentialGroup()
                        .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(commPanelLayout.createSequentialGroup()
                                .addComponent(lblAge)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtStrength, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(commPanelLayout.createSequentialGroup()
                                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblFname)
                                    .addComponent(lblLname))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHosName)
                                    .addComponent(txthosID, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(commPanelLayout.createSequentialGroup()
                                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCity)
                                    .addComponent(lblComm))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cityComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(commComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStrength, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(commPanelLayout.createSequentialGroup()
                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, commPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnUpdatePerson)
                        .addGap(9, 9, 9)
                        .addComponent(btnSaveUpdate)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, commPanelLayout.createSequentialGroup()
                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(commPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(commPanelLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(BtnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(211, 211, 211))
        );
        commPanelLayout.setVerticalGroup(
            commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdatePerson)
                    .addComponent(btnSaveUpdate))
                .addGap(18, 18, 18)
                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblFname)
                    .addComponent(txthosID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(commPanelLayout.createSequentialGroup()
                        .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLname)
                            .addComponent(txtHosName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtStrength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblStrength, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(cityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(commPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComm)
                    .addComponent(commComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAddHos)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jLayeredPane1.add(commPanel, "card3");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Community Admin");

        viewHouseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Housel ID", "House Name", "Community Address", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(viewHouseTable);

        lblHouseId.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        lblHouseId.setText("House ID:");

        lblHouseName.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        lblHouseName.setText("House Name:");

        txtHouseName.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        txtHouseName.setForeground(new java.awt.Color(153, 153, 0));
        txtHouseName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHouseNameKeyReleased(evt);
            }
        });

        lblHouseComm.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        lblHouseComm.setText("Community:");

        lblHouseCity.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        lblHouseCity.setText("City:");

        btnAddHouse.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        btnAddHouse.setText("Add House");
        btnAddHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHouseActionPerformed(evt);
            }
        });

        btnUpdateHouse.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        btnUpdateHouse.setText("Update");
        btnUpdateHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateHouseActionPerformed(evt);
            }
        });

        btnSaveHouseUpdate.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        btnSaveHouseUpdate.setText("Save Updates");
        btnSaveHouseUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveHouseUpdateActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("House Directory");

        btnDeleteHouse.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        btnDeleteHouse.setText("Delete");
        btnDeleteHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteHouseActionPerformed(evt);
            }
        });

        BtnBack1.setText("Back");
        BtnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBack1ActionPerformed(evt);
            }
        });

        cityComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "New York" }));
        cityComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityComboBox1ActionPerformed(evt);
            }
        });

        commComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));
        commComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout commHousePanelLayout = new javax.swing.GroupLayout(commHousePanel);
        commHousePanel.setLayout(commHousePanelLayout);
        commHousePanelLayout.setHorizontalGroup(
            commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commHousePanelLayout.createSequentialGroup()
                .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(commHousePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, commHousePanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnDeleteHouse)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdateHouse)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSaveHouseUpdate))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)))
                    .addGroup(commHousePanelLayout.createSequentialGroup()
                        .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(commHousePanelLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(BtnBack1)
                                .addGap(129, 129, 129)
                                .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(commHousePanelLayout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblHouseId)
                                    .addComponent(lblHouseName)
                                    .addComponent(lblHouseComm)
                                    .addComponent(lblHouseCity))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtHouseName)
                                        .addComponent(txthouseId, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cityComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(commComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(commHousePanelLayout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(btnAddHouse)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        commHousePanelLayout.setVerticalGroup(
            commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commHousePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnBack1))
                .addGap(1, 1, 1)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveHouseUpdate)
                    .addComponent(btnUpdateHouse)
                    .addComponent(btnDeleteHouse))
                .addGap(38, 38, 38)
                .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(commHousePanelLayout.createSequentialGroup()
                        .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblHouseId)
                            .addComponent(txthouseId, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(commHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHouseName)
                            .addComponent(txtHouseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHouseCity)
                        .addGap(12, 12, 12)
                        .addComponent(lblHouseComm))
                    .addGroup(commHousePanelLayout.createSequentialGroup()
                        .addComponent(cityComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(commComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnAddHouse)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        jLayeredPane1.add(commHousePanel, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loginBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtn3ActionPerformed
        // TODO add your handling code here:
        String userName = txtuserName.getText();
        String password = txtPassword.getText();

        if("communityAdmin".equals(userName) && "adminLogin".equals(password)){
            switchPanels(commChoosePanel);
        }
        else{
            JOptionPane.showMessageDialog(this, "Try Again. Incorrect Id and Password.");
        }

        txtuserName.setText("");
        txtPassword.setText("");
    }//GEN-LAST:event_loginBtn3ActionPerformed

    private void hosDirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hosDirBtnActionPerformed
        // TODO add your handling code here:
        switchPanels(commPanel);
    }//GEN-LAST:event_hosDirBtnActionPerformed

    private void hosDirBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hosDirBtn1ActionPerformed
        // TODO add your handling code here:
        switchPanels(commHousePanel);
    }//GEN-LAST:event_hosDirBtn1ActionPerformed

    private void BtnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogoutActionPerformed
        // TODO add your handling code here:
        switchPanels(commLoginPanel);
    }//GEN-LAST:event_BtnLogoutActionPerformed

    private void btnUpdatePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePersonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = viewHosTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) viewHosTable.getModel();

        Hospital hospital = (Hospital) model.getValueAt(selectedRowIndex , 0);
        txtStrength.setText(String.valueOf(hospital.getHospitalStrength()));
        cityComboBox.setSelectedItem((String)hospital.getHospitalCity());
        txthosID.setText(String.valueOf(hospital.getHospitalId()));
        txtHosName.setText(hospital.getHospitalName());
        commComboBox.setSelectedItem((String)hospital.getHospitalCommunity());

    }//GEN-LAST:event_btnUpdatePersonActionPerformed

    private void txtHosNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHosNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHosNameActionPerformed

    private void txtHosNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHosNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHosNameKeyReleased

    private void txtStrengthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStrengthKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{0,3}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtStrength.getText());
        if(!match.matches()){
            lblStrength.setText("Only Numbers and upto 3 digits are allowed");
        }else{
            lblStrength.setText("");
        }
    }//GEN-LAST:event_txtStrengthKeyReleased

    private void btnAddHosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHosActionPerformed
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{0,3}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtStrength.getText());

        if(txtStrength.getText()== null || txtStrength.getText().isEmpty()
            /*  || txtHosId.getText()== null || txtHosId.getText().isEmpty()*/
            || txtHosName.getText()== null || txtHosName.getText().isEmpty()
        ){
            JOptionPane.showMessageDialog(this, "Please enter all fields ! ");

        }
        else if(!match.matches()){
            JOptionPane.showMessageDialog(this, "Wrong values entered!");
        }
        else{
            Hospital hospital = new Hospital();
            hospital.setHospitalId(getUniqueId());
            //txtHosId.setText(String.valueOf(hospital.getHospitalId()));
            hospital.setHospitalName(txtHosName.getText());
            hospital.setHospitalStrength(Integer.parseInt(txtStrength.getText()));

            Community com = new Community();
            for(Community c: communityDirectory.getCommunityList()){
                if(commComboBox.getSelectedItem().equals(c.getCommunityAddress())){
                    com = c;
                }
            }

            hospital.setHospitalCommunity((String) commComboBox.getSelectedItem());
            hospital.setHospitalCommId(com.getCommunityID());
            hospital.setHospitalCity((String) cityComboBox.getSelectedItem());

            this.hospitalDirectory.addNewHospital(hospital);

            populateTable();

            txtStrength.setText("");
            txthosID.setText("");
            txtHosName.setText("");

            {
                JOptionPane.showMessageDialog(this, "Hospital Details Added Successfully");
            }
        }
    }//GEN-LAST:event_btnAddHosActionPerformed

    private void btnSaveUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveUpdateActionPerformed
        // TODO add your handling code here:
        if(txtStrength.getText()== null || txtStrength.getText().isEmpty()
            /* || txtHosId.getText()== null || txtHosId.getText().isEmpty()*/
            || txtHosName.getText()== null || txtHosName.getText().isEmpty()
        ){
            JOptionPane.showMessageDialog(this, "Please enter all fields ! ");

        }
        else{
            int selectedRowIndex = viewHosTable.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) viewHosTable.getModel();

            Hospital hospital = (Hospital) model.getValueAt(selectedRowIndex , 0);
            hospital.setHospitalName(txtHosName.getText());
            hospital.setHospitalStrength(Integer.parseInt(txtStrength.getText()));
            Community com = new Community();
            for(Community c: communityDirectory.getCommunityList()){
                if(commComboBox.getSelectedItem().equals(c.getCommunityAddress())){
                    com = c;
                }
            }

            hospital.setHospitalCommunity((String) commComboBox.getSelectedItem());
            hospital.setHospitalCommId(com.getCommunityID());
            hospital.setHospitalCity((String) cityComboBox.getSelectedItem());

            populateTable();

            JOptionPane.showMessageDialog(this, "Hospital Record Updated Successfully!");

            txtStrength.setText("");
            txthosID.setText("");
            txtHosName.setText("");

        }
    }//GEN-LAST:event_btnSaveUpdateActionPerformed

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        // TODO add your handling code here:
        switchPanels(commChoosePanel);
    }//GEN-LAST:event_BtnBackActionPerformed

    private void cityComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityComboBoxActionPerformed
        // TODO add your handling code here:

        String cityName = (String) cityComboBox.getSelectedItem();

        DefaultComboBoxModel bosModel = new DefaultComboBoxModel(requiredCommunity(cityName));
        commComboBox.setModel(bosModel);

        /*  if ("Boston".equals(cityComboBox.getSelectedItem())){
            //DefaultComboBoxModel bosModel = new DefaultComboBoxModel(new String[]{"Allston", "Charlestown"});
            DefaultComboBoxModel bosModel = new DefaultComboBoxModel(requiredCommunity("Boston"));
            commComboBox.setModel(bosModel);
        } else {
            commComboBox.setModel(nyModel);
        }*/
    }//GEN-LAST:event_cityComboBoxActionPerformed

    private void commComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commComboBoxActionPerformed
        // TODO add your handling code here:

        /* if ("Allston".equals(commComboBox.getSelectedItem())){
            hosComboBox.setModel(allModel);
        } else if("Charlestown".equals(commComboBox.getSelectedItem())){
            hosComboBox.setModel(charModel);
        } else if("Brooklyn".equals(commComboBox.getSelectedItem())){
            hosComboBox.setModel(broModel);
        } else if("Queens".equals(commComboBox.getSelectedItem())){
            hosComboBox.setModel(queModel);
        }
        */

    }//GEN-LAST:event_commComboBoxActionPerformed

    private void txtHouseNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHouseNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHouseNameKeyReleased

    private void btnAddHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHouseActionPerformed
        // TODO add your handling code here:
        if(txtHouseName.getText()== null || txtHouseName.getText().isEmpty()
        ){
            JOptionPane.showMessageDialog(this, "Please enter all fields ! ");
        }
        else{
            House house = new House();

            house.setHouseId(getUniqueId());
            house.setHouseName(txtHouseName.getText());
            house.setHouseCity((String) cityComboBox1.getSelectedItem());
            house.setHouseCommunity((String) commComboBox1.getSelectedItem());

            Community com = new Community();
            for(Community c: communityDirectory.getCommunityList()){
                if(commComboBox1.getSelectedItem().equals(c.getCommunityAddress())){
                    com = c;
                }
            }

            house.setHouseCommId(com.getCommunityID());
            house.setHouseCityId(com.getCityID());
            this.houseDirectory.addNewHouse(house);

            populateHouseTable();

            txtHouseName.setText("");

            {
                JOptionPane.showMessageDialog(this, "House Details Added Successfully");
            }
        }

    }//GEN-LAST:event_btnAddHouseActionPerformed

    private void btnUpdateHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateHouseActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = viewHouseTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) viewHouseTable.getModel();

        House house = (House) model.getValueAt(selectedRowIndex , 0);
        txthouseId.setText(String.valueOf(house.getHouseId()));
        txtHouseName.setText(house.getHouseName());
        cityComboBox1.setSelectedItem(house.getHouseCity());
        commComboBox1.setSelectedItem(house.getHouseCommunity());

    }//GEN-LAST:event_btnUpdateHouseActionPerformed

    private void btnSaveHouseUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveHouseUpdateActionPerformed
        // TODO add your handling code here:
        if(txtHouseName.getText()== null || txtHouseName.getText().isEmpty()
        ){
            JOptionPane.showMessageDialog(this, "Please enter all fields ! ");

        }
        else{
            int selectedRowIndex = viewHouseTable.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) viewHouseTable.getModel();

            House house = (House) model.getValueAt(selectedRowIndex , 0);
            house.setHouseName(txtHouseName.getText());

            house.setHouseCity((String) cityComboBox1.getSelectedItem());
            house.setHouseCommunity((String) commComboBox1.getSelectedItem());

            Community com = new Community();
            for(Community c: communityDirectory.getCommunityList()){
                if(commComboBox.getSelectedItem().equals(c.getCommunityAddress())){
                    com = c;
                }
            }
            house.setHouseCommId(com.getCommunityID());
            house.setHouseCityId(com.getCityID());

            populateHouseTable();

            JOptionPane.showMessageDialog(this, "Record Updated Successfully!");

            txthouseId.setText("");
            txtHouseName.setText("");

        }
    }//GEN-LAST:event_btnSaveHouseUpdateActionPerformed

    private void btnDeleteHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteHouseActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = viewHouseTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) viewHouseTable.getModel();
        System.out.println(model.getValueAt(selectedRowIndex, 0));
        House house = (House) model.getValueAt(selectedRowIndex , 0);
        houseDirectory.getHouseList().remove(selectedRowIndex);
        populateHouseTable();
        JOptionPane.showMessageDialog(this, "House Record Deleted Successfully!");
    }//GEN-LAST:event_btnDeleteHouseActionPerformed

    private void BtnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBack1ActionPerformed
        // TODO add your handling code here:
        switchPanels(commChoosePanel);
    }//GEN-LAST:event_BtnBack1ActionPerformed

    private void cityComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityComboBox1ActionPerformed
        // TODO add your handling code here:
        String cityName = (String) cityComboBox1.getSelectedItem();

        DefaultComboBoxModel bosModel = new DefaultComboBoxModel(requiredCommunity(cityName));
        commComboBox1.setModel(bosModel);
    }//GEN-LAST:event_cityComboBox1ActionPerformed

    private void commComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commComboBox1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_commComboBox1ActionPerformed
private int getUniqueId() {
    
    int randomPIN = (int)(Math.random()*90000)+10000;
     for(Hospital hospital: hospitalDirectory.getHospitalList()){
        if(hospital.getHospitalId()== randomPIN){
          getUniqueId();
        }
      }
    return randomPIN;
}

private void switchPanels(Component component){
        jLayeredPane1.removeAll();
        jLayeredPane1.add(component);
        jLayeredPane1.revalidate();
        jLayeredPane1.repaint();
}

private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) viewHosTable.getModel();
        model.setRowCount(0);
        for (Hospital hospital: hospitalDirectory.getHospitalList()){
        Object[] row = new Object[5];
        row[0] = hospital;
        row[1] = hospital.getHospitalName();
        row[2] = hospital.getHospitalStrength();
        row[3] = hospital.getHospitalCommunity();
        row[4] = hospital.getHospitalCity();
        model.addRow(row);
        }
  }

private void populateHouseTable() {
        DefaultTableModel model = (DefaultTableModel) viewHouseTable.getModel();
        model.setRowCount(0);
        for (House house: houseDirectory.getHouseList()){
        Object[] row = new Object[4];
        row[0] = house;
        row[1] = house.getHouseName();
        row[2] = house.getHouseCommunity();
        row[3] = house.getHouseCity();
        model.addRow(row);
        }
  }

private String[] requiredCommunity(String cityName){
        
        String[] communityNames = new String[10];
        int i =0;
        
        int cityId = 0;
        
        for(City c: cityList){
            if(c.getCityName().equals(cityName)){
                cityId = c.getCityId();
                break;
            }
        }
        
        for(Community c: communityDirectory.getCommunityList()){
            if(c.getCityID() == cityId){
                communityNames[i] = c.getCommunityAddress();
                i++;
            }
        }
        
        return communityNames;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnBack1;
    private javax.swing.JButton BtnLogout;
    private javax.swing.JButton btnAddHos;
    private javax.swing.JButton btnAddHouse;
    private javax.swing.JButton btnDeleteHouse;
    private javax.swing.JButton btnSaveHouseUpdate;
    private javax.swing.JButton btnSaveUpdate;
    private javax.swing.JButton btnUpdateHouse;
    private javax.swing.JButton btnUpdatePerson;
    private javax.swing.JComboBox<String> cityComboBox;
    private javax.swing.JComboBox<String> cityComboBox1;
    private javax.swing.JPanel commChoosePanel;
    private javax.swing.JComboBox<String> commComboBox;
    private javax.swing.JComboBox<String> commComboBox1;
    private javax.swing.JPanel commHousePanel;
    private javax.swing.JPanel commLoginPanel;
    private javax.swing.JPanel commPanel;
    private javax.swing.JButton hosDirBtn;
    private javax.swing.JButton hosDirBtn1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblComm;
    private javax.swing.JLabel lblFname;
    private javax.swing.JLabel lblHouseCity;
    private javax.swing.JLabel lblHouseComm;
    private javax.swing.JLabel lblHouseId;
    private javax.swing.JLabel lblHouseName;
    private javax.swing.JLabel lblLname;
    private javax.swing.JLabel lblStrength;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblUserName1;
    private javax.swing.JButton loginBtn3;
    private javax.swing.JTextField txtHosName;
    private javax.swing.JTextField txtHouseName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtStrength;
    private javax.swing.JLabel txthosID;
    private javax.swing.JLabel txthouseId;
    private javax.swing.JTextField txtuserName;
    private javax.swing.JTable viewHosTable;
    private javax.swing.JTable viewHouseTable;
    // End of variables declaration//GEN-END:variables
}
