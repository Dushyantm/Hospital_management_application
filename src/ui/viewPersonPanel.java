/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import Model.City;
import Model.Community;
import Model.CommunityDirectory;
import Model.Doctor;
import Model.DoctorDirectory;
import Model.Hospital;
import Model.HospitalDirectory;
import Model.House;
import Model.HouseDirectory;
import Model.Patient;
import Model.PatientDirectory;
import Model.Person;
import Model.PersonDirectory;
import java.awt.Component;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
/**
 *
 * @author Swapnil
 */
public class viewPersonPanel extends javax.swing.JPanel {

    PatientDirectory patientDirectory;
    PersonDirectory personDirectory;
    Person loggedinPerson;
    boolean loggedIn;
    ArrayList<City> cityList;
    CommunityDirectory communityDirectory;
    HospitalDirectory hospitalDirectory;
    DoctorDirectory doctorDirectory;
    HouseDirectory houseDirectory;
    
    public viewPersonPanel(PersonDirectory personDirectory, PatientDirectory patientDirectory, ArrayList<City> cityList, CommunityDirectory communityDirectory, HospitalDirectory hospitalDirectory
    , DoctorDirectory doctorDirectory, HouseDirectory houseDirectory) {
        initComponents();
        this.personDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
        this.communityDirectory = communityDirectory;
        this.cityList = cityList;  
        this.hospitalDirectory = hospitalDirectory;
        this.doctorDirectory = doctorDirectory;
        this.houseDirectory = houseDirectory;
        
        loggedinPerson = new Person();
        loggedIn = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        loginPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        txtuserName = new javax.swing.JTextField();
        lblUserName1 = new javax.swing.JLabel();
        loginBtn = new javax.swing.JButton();
        registerBtn = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        registerPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblFname = new javax.swing.JLabel();
        txtFname = new javax.swing.JTextField();
        lblLname = new javax.swing.JLabel();
        txtLname = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblComm = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblHouseNo = new javax.swing.JLabel();
        lblHouseNo1 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtPass = new javax.swing.JTextField();
        lblHouseNo2 = new javax.swing.JLabel();
        personRegisterBtn = new javax.swing.JButton();
        backToLoginBtn = new javax.swing.JButton();
        chooseHouseBox = new javax.swing.JComboBox<>();
        lblfname = new javax.swing.JLabel();
        lbllname = new javax.swing.JLabel();
        lblage = new javax.swing.JLabel();
        cityComboBox1 = new javax.swing.JComboBox<>();
        commComboBox1 = new javax.swing.JComboBox<>();
        lblusername = new javax.swing.JLabel();
        lblpassword = new javax.swing.JLabel();
        btnAddNewCity = new javax.swing.JButton();
        btnAddNewComm = new javax.swing.JButton();
        btnAddNewHouse = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        lblAge1 = new javax.swing.JLabel();
        genderComboBox = new javax.swing.JComboBox<>();
        personViewOptionPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        findDocBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        personPanel = new javax.swing.JPanel();
        headingLbl = new javax.swing.JLabel();
        cityLbl = new javax.swing.JLabel();
        cityComboBox = new javax.swing.JComboBox<>();
        commLbl = new javax.swing.JLabel();
        commComboBox = new javax.swing.JComboBox<>();
        hosLbl = new javax.swing.JLabel();
        hosComboBox = new javax.swing.JComboBox<>();
        docLbl = new javax.swing.JLabel();
        docComboBox = new javax.swing.JComboBox<>();
        bookBtn = new javax.swing.JButton();
        personIdLbl = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        lblPersonId = new javax.swing.JLabel();
        viewEncounterPanel = new javax.swing.JPanel();
        headingLbl1 = new javax.swing.JLabel();
        backBtn1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        appointmentTable = new javax.swing.JTable();
        headingLbl2 = new javax.swing.JLabel();
        headingLbl3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        encounterTable = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(800, 540));

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        loginPanel.setBackground(new java.awt.Color(255, 255, 255));
        loginPanel.setPreferredSize(new java.awt.Dimension(800, 540));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Person Login");

        lblUserName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUserName.setText("Username:");

        lblUserName1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUserName1.setText("Password:");

        loginBtn.setBackground(new java.awt.Color(102, 204, 255));
        loginBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        registerBtn.setBackground(new java.awt.Color(102, 204, 255));
        registerBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUserName1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUserName, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtuserName, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(txtPassword))
                .addGap(312, 312, 312))
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.CENTER, loginPanelLayout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addGap(55, 55, 55)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUserName)
                    .addComponent(txtuserName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUserName1)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(245, Short.MAX_VALUE))
        );

        jLayeredPane1.add(loginPanel, "card2");

        registerPanel.setBackground(new java.awt.Color(255, 255, 255));
        registerPanel.setPreferredSize(new java.awt.Dimension(800, 540));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Register Person");

        lblFname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFname.setText("First Name:");

        txtFname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFnameKeyReleased(evt);
            }
        });

        lblLname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblLname.setText("Last Name:");

        txtLname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtLname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLnameKeyReleased(evt);
            }
        });

        lblAge.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAge.setText("Age:");

        txtAge.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgeKeyReleased(evt);
            }
        });

        lblComm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblComm.setText("Community:");

        lblCity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCity.setText("City:");

        lblHouseNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHouseNo.setText("House Number:");

        lblHouseNo1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHouseNo1.setText("Username:");

        txtUserName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUserNameKeyReleased(evt);
            }
        });

        txtPass.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPassKeyReleased(evt);
            }
        });

        lblHouseNo2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHouseNo2.setText("Password:");

        personRegisterBtn.setBackground(new java.awt.Color(102, 204, 255));
        personRegisterBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        personRegisterBtn.setText("Register");
        personRegisterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personRegisterBtnActionPerformed(evt);
            }
        });

        backToLoginBtn.setFont(backToLoginBtn.getFont().deriveFont(backToLoginBtn.getFont().getSize()+5f));
        backToLoginBtn.setText("↩");
        backToLoginBtn.setBorderPainted(false);
        backToLoginBtn.setContentAreaFilled(false);
        backToLoginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToLoginBtnActionPerformed(evt);
            }
        });

        chooseHouseBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));

        lblfname.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N

        lbllname.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N

        lblage.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N
        lblage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblageKeyReleased(evt);
            }
        });

        cityComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cityComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "New York" }));
        cityComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityComboBox1ActionPerformed(evt);
            }
        });

        commComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        commComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));
        commComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commComboBox1ActionPerformed(evt);
            }
        });

        lblusername.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N

        lblpassword.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N

        btnAddNewCity.setText("Add New City");
        btnAddNewCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewCityActionPerformed(evt);
            }
        });

        btnAddNewComm.setText("Add Community");
        btnAddNewComm.setMargin(new java.awt.Insets(2, 5, 3, 5));
        btnAddNewComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewCommActionPerformed(evt);
            }
        });

        btnAddNewHouse.setText("Add New House");
        btnAddNewHouse.setMargin(new java.awt.Insets(2, 5, 3, 5));
        btnAddNewHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewHouseActionPerformed(evt);
            }
        });

        btnRefresh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRefresh.setText("<html>\n<u>Refresh</u>\n</html>");
        btnRefresh.setBorderPainted(false);
        btnRefresh.setContentAreaFilled(false);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        lblAge1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAge1.setText("Gender:");

        genderComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        genderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male", "Other" }));
        genderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerPanelLayout = new javax.swing.GroupLayout(registerPanel);
        registerPanel.setLayout(registerPanelLayout);
        registerPanelLayout.setHorizontalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAge)
                            .addComponent(lblLname)
                            .addComponent(lblFname)
                            .addComponent(lblAge1)
                            .addComponent(lblCity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(genderComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFname)
                            .addComponent(txtLname)
                            .addComponent(cityComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(registerPanelLayout.createSequentialGroup()
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblfname, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                            .addComponent(lbllname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(personRegisterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(registerPanelLayout.createSequentialGroup()
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(registerPanelLayout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblComm)
                                            .addComponent(lblHouseNo)
                                            .addComponent(lblHouseNo1)
                                            .addComponent(lblHouseNo2)))
                                    .addComponent(btnAddNewCity))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(registerPanelLayout.createSequentialGroup()
                                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(chooseHouseBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtUserName, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(commComboBox1, 0, 177, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(btnAddNewComm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnAddNewHouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(lblusername, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblpassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addComponent(backToLoginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(234, 234, 234)
                        .addComponent(jLabel2)))
                .addGap(19, 19, 19))
        );
        registerPanelLayout.setVerticalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(commComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblComm)
                            .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFname)
                            .addComponent(btnAddNewComm, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblfname, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(registerPanelLayout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblAge1)
                                    .addComponent(genderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(registerPanelLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(btnAddNewHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chooseHouseBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblHouseNo)
                                    .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLname))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbllname, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(registerPanelLayout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                            .addComponent(lblHouseNo1)
                                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblusername, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblAge, javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(txtAge, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblage, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblHouseNo2)))))
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2)
                            .addComponent(backToLoginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cityComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCity)
                        .addComponent(btnAddNewCity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(personRegisterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(133, Short.MAX_VALUE))
        );

        jLayeredPane1.add(registerPanel, "card3");

        personViewOptionPanel.setBackground(new java.awt.Color(255, 255, 255));
        personViewOptionPanel.setPreferredSize(new java.awt.Dimension(800, 540));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("You're Logged In");

        findDocBtn.setBackground(new java.awt.Color(102, 204, 255));
        findDocBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        findDocBtn.setText("Search for Doctor");
        findDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findDocBtnActionPerformed(evt);
            }
        });

        logoutBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logoutBtn.setForeground(new java.awt.Color(255, 51, 51));
        logoutBtn.setText("<html>\n<u>Logout</u>\n</html>");
        logoutBtn.setToolTipText("");
        logoutBtn.setBorderPainted(false);
        logoutBtn.setContentAreaFilled(false);
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout personViewOptionPanelLayout = new javax.swing.GroupLayout(personViewOptionPanel);
        personViewOptionPanel.setLayout(personViewOptionPanelLayout);
        personViewOptionPanelLayout.setHorizontalGroup(
            personViewOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personViewOptionPanelLayout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addGroup(personViewOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(findDocBtn)
                    .addComponent(jLabel3))
                .addGap(120, 120, 120)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );
        personViewOptionPanelLayout.setVerticalGroup(
            personViewOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personViewOptionPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(personViewOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(65, 65, 65)
                .addComponent(findDocBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(377, Short.MAX_VALUE))
        );

        jLayeredPane1.add(personViewOptionPanel, "card2");

        personPanel.setBackground(new java.awt.Color(255, 255, 255));
        personPanel.setPreferredSize(new java.awt.Dimension(800, 540));

        headingLbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        headingLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingLbl.setText("Find a Doctor");

        cityLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cityLbl.setText("Select City:");

        cityComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "New York" }));
        cityComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityComboBoxActionPerformed(evt);
            }
        });

        commLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        commLbl.setText("Select Community:");

        commComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        commComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));
        commComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commComboBoxActionPerformed(evt);
            }
        });

        hosLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        hosLbl.setText("Select Hospital:");

        hosComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        hosComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));
        hosComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hosComboBoxActionPerformed(evt);
            }
        });

        docLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        docLbl.setText("Select Doctor:");

        docComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        docComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));
        docComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docComboBoxActionPerformed(evt);
            }
        });

        bookBtn.setBackground(new java.awt.Color(102, 204, 255));
        bookBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bookBtn.setText("Book Appointment");
        bookBtn.setMargin(new java.awt.Insets(2, 5, 3, 5));
        bookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookBtnActionPerformed(evt);
            }
        });

        personIdLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        personIdLbl.setText("PersonID:");

        backBtn.setFont(backBtn.getFont().deriveFont(backBtn.getFont().getSize()+5f));
        backBtn.setText("↩");
        backBtn.setToolTipText("");
        backBtn.setBorderPainted(false);
        backBtn.setContentAreaFilled(false);
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout personPanelLayout = new javax.swing.GroupLayout(personPanel);
        personPanel.setLayout(personPanelLayout);
        personPanelLayout.setHorizontalGroup(
            personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personPanelLayout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addGroup(personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(personPanelLayout.createSequentialGroup()
                        .addComponent(personIdLbl)
                        .addGap(18, 18, 18)
                        .addComponent(lblPersonId, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(personPanelLayout.createSequentialGroup()
                        .addGroup(personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(commLbl)
                            .addComponent(cityLbl)
                            .addComponent(hosLbl)
                            .addComponent(docLbl))
                        .addGap(18, 18, 18)
                        .addGroup(personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(commComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(docComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(313, 313, 313))
            .addGroup(personPanelLayout.createSequentialGroup()
                .addGroup(personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(backBtn)
                        .addGap(219, 219, 219)
                        .addComponent(headingLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(personPanelLayout.createSequentialGroup()
                        .addGap(317, 317, 317)
                        .addComponent(bookBtn)))
                .addContainerGap())
        );
        personPanelLayout.setVerticalGroup(
            personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn)
                    .addComponent(headingLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPersonId, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(commLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hosLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(personPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(docLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(docComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(bookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154))
        );

        jLayeredPane1.add(personPanel, "card4");

        viewEncounterPanel.setPreferredSize(new java.awt.Dimension(800, 540));

        headingLbl1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        headingLbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingLbl1.setText("View Encounters");

        backBtn1.setText("back");
        backBtn1.setToolTipText("");
        backBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtn1ActionPerformed(evt);
            }
        });

        appointmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Doctor Name", "Hospital Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        appointmentTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                appointmentTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(appointmentTable);

        headingLbl2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        headingLbl2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingLbl2.setText("Appointment Details");

        headingLbl3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        headingLbl3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingLbl3.setText("Encounter Details");

        encounterTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Timestamp", "Temperature", "Blood Pressure", "Pulse", "Doctor Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(encounterTable);

        javax.swing.GroupLayout viewEncounterPanelLayout = new javax.swing.GroupLayout(viewEncounterPanel);
        viewEncounterPanel.setLayout(viewEncounterPanelLayout);
        viewEncounterPanelLayout.setHorizontalGroup(
            viewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewEncounterPanelLayout.createSequentialGroup()
                .addGroup(viewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(viewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(viewEncounterPanelLayout.createSequentialGroup()
                            .addGap(268, 268, 268)
                            .addComponent(headingLbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(viewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(viewEncounterPanelLayout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(viewEncounterPanelLayout.createSequentialGroup()
                            .addGap(68, 68, 68)
                            .addComponent(backBtn1)
                            .addGap(152, 152, 152)
                            .addGroup(viewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(viewEncounterPanelLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(headingLbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(headingLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        viewEncounterPanelLayout.setVerticalGroup(
            viewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewEncounterPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(viewEncounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn1)
                    .addComponent(headingLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(headingLbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(headingLbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane1.add(viewEncounterPanel, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:
        String userName = txtuserName.getText();
        String password = txtPassword.getText();

        for(Person p: personDirectory.getPersonList()){
            String uN = p.getPersonUserName();
            String pW = p.getPersonPassword();

            if(uN.equals(userName) && pW.equals(password)){
                loggedinPerson = p;
                loggedIn = true;
                System.out.println("login successful");
                break;
            }
        }

        if(loggedIn == true){
            switchPanels(personViewOptionPanel);
        }
    }//GEN-LAST:event_loginBtnActionPerformed

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        // TODO add your handling code here:
        switchPanels(registerPanel);

    }//GEN-LAST:event_registerBtnActionPerformed

    private void txtFnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFnameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{0,50}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtFname.getText());
        if(!match.matches()){
            lblfname.setText("Name is Invalid, Please enter Valid name !");
        }else{
            lblfname.setText("");
        }
    }//GEN-LAST:event_txtFnameKeyReleased

    private void txtLnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLnameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{0,50}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtLname.getText());
        if(!match.matches()){
            lbllname.setText("Name is Invalid, Please enter Valid name !");
        }else{
            lbllname.setText("");
        }
    }//GEN-LAST:event_txtLnameKeyReleased

    private void txtAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{0,3}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtAge.getText());
        if(!match.matches()){
            lblage.setText("Only Numbers and upto 3 digits are allowed");
        }else{
            lblage.setText("");
        }
    }//GEN-LAST:event_txtAgeKeyReleased

    private void txtUserNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserNameKeyReleased
        // TODO add your handling code here:
        String username = txtUserName.getText();
        for(Person p: personDirectory.getPersonList()){
            if(username.equals(p.getPersonUserName())){
                lblusername.setText("Username already exists.");
            }
            else{
                lblusername.setText("");
            }
        }
    }//GEN-LAST:event_txtUserNameKeyReleased

    private void txtPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#&()–[{}]:;',?/*~$^+=<>]).{8,20}$";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtPass.getText());
        if(!match.matches()){
            lblpassword.setText("<html>Not a valid password. Password must contain at least one digit<br/>"
                + "Password must contain at least one lowercase and one uppercase character<br/>"
                + "Password must contain at least one special character like ! @#&()<br/>"
                + "Password length should be at least 8 characters and a maximum of 20 characters</html>"
            );
        }else{
            lblpassword.setText("");
        }
    }//GEN-LAST:event_txtPassKeyReleased

    private void personRegisterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personRegisterBtnActionPerformed
        if(txtAge.getText()== null || txtAge.getText().isEmpty()
            || txtUserName.getText()== null || txtUserName.getText().isEmpty()
            || txtFname.getText()== null || txtFname.getText().isEmpty()
            || txtLname.getText()== null || txtLname.getText().isEmpty()
            || txtPass.getText()== null || txtPass.getText().isEmpty()
        ){
            JOptionPane.showMessageDialog(this, "Please enter all fields ! ");

        }
        else if(userNameUnique(txtUserName.getText()) == false){
            JOptionPane.showMessageDialog(this, "This username already exists. Please choose a unique username! ");
        }
        else{
            Person person = new Person();
            person.setPersonAge(Integer.parseInt(txtAge.getText()));
            person.setPersonCityName((String) cityComboBox1.getSelectedItem());
            person.setPersonCommunityName((String) commComboBox1.getSelectedItem());
            person.setPersonHouseNo((String) chooseHouseBox.getSelectedItem());

            person.setFirstName(txtFname.getText());
            person.setLastName(txtLname.getText());
            person.setPersonId(getUniqueId());
            person.setPersonPassword(txtPass.getText());
            person.setPersonUserName(txtUserName.getText());
            person.setGender((String) genderComboBox.getSelectedItem());
            this.personDirectory.addNewPerson(person);
            JOptionPane.showMessageDialog(this, "You have been registered.");
            System.out.println("the person has been added");

            txtFname.setText("");
            txtLname.setText("");
            txtAge.setText("");
            txtUserName.setText("");
            txtPass.setText("");
        }

        /* try {
            // TODO add your handling code here:
            setData();
        } catch (IOException ex) {
            Logger.getLogger(viewPersonPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        */
    }//GEN-LAST:event_personRegisterBtnActionPerformed

    private void backToLoginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToLoginBtnActionPerformed
        // TODO add your handling code here:
        switchPanels(loginPanel);
    }//GEN-LAST:event_backToLoginBtnActionPerformed

    private void lblageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblageKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblageKeyReleased

    private void cityComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityComboBox1ActionPerformed
        // TODO add your handling code here:

        String cityName = (String) cityComboBox1.getSelectedItem();

        DefaultComboBoxModel bosModel = new DefaultComboBoxModel(requiredCommunity(cityName));
        commComboBox1.setModel(bosModel);

    }//GEN-LAST:event_cityComboBox1ActionPerformed

    private void commComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commComboBox1ActionPerformed
        // TODO add your handling code here:
        String communityName = (String) commComboBox1.getSelectedItem();

        DefaultComboBoxModel hosModel = new DefaultComboBoxModel(requiredHouse(communityName));
        chooseHouseBox.setModel(hosModel);
    }//GEN-LAST:event_commComboBox1ActionPerformed

    private void btnAddNewCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewCityActionPerformed
        // TODO add your handling code here:
        addCityFrame addCity = new addCityFrame(cityList);
        addCity.setVisible(true);

    }//GEN-LAST:event_btnAddNewCityActionPerformed

    private void btnAddNewCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewCommActionPerformed
        // TODO add your handling code here:
        AddCommunity addCommunity = new AddCommunity(cityList, communityDirectory);
        addCommunity.setVisible(true);
    }//GEN-LAST:event_btnAddNewCommActionPerformed

    private void btnAddNewHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewHouseActionPerformed
        // TODO add your handling code here:
        AddHouseFrame addHouse = new AddHouseFrame(cityList, communityDirectory, houseDirectory);
        addHouse.setVisible(true);
    }//GEN-LAST:event_btnAddNewHouseActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        DefaultComboBoxModel cityModel = new DefaultComboBoxModel(requiredCity());
        cityComboBox1.setModel(cityModel);

    }//GEN-LAST:event_btnRefreshActionPerformed

    private void genderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderComboBoxActionPerformed

    private void findDocBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findDocBtnActionPerformed
        // TODO add your handling code here:
        switchPanels(personPanel);
    }//GEN-LAST:event_findDocBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
        switchPanels(loginPanel);
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void cityComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityComboBoxActionPerformed
        // TODO add your handling code here:

        String cityName = (String) cityComboBox.getSelectedItem();

        DefaultComboBoxModel bosModel = new DefaultComboBoxModel(requiredCommunity(cityName));
        commComboBox.setModel(bosModel);

        /*  if ("Boston".equals(cityComboBox.getSelectedItem())){
            //DefaultComboBoxModel bosModel = new DefaultComboBoxModel(new String[]{"Allston", "Charlestown"});
            DefaultComboBoxModel bosModel = new DefaultComboBoxModel(requiredCommunity("Boston"));
            commComboBox.setModel(bosModel);
        } else {
            commComboBox.setModel(nyModel);
        }*/
    }//GEN-LAST:event_cityComboBoxActionPerformed

    private void commComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commComboBoxActionPerformed
        // TODO add your handling code here:
        String communityName = (String) commComboBox.getSelectedItem();

        DefaultComboBoxModel hosModel = new DefaultComboBoxModel(requiredHospital(communityName));
        hosComboBox.setModel(hosModel);

        /* if ("Allston".equals(commComboBox.getSelectedItem())){
            hosComboBox.setModel(allModel);
        } else if("Charlestown".equals(commComboBox.getSelectedItem())){
            hosComboBox.setModel(charModel);
        } else if("Brooklyn".equals(commComboBox.getSelectedItem())){
            hosComboBox.setModel(broModel);
        } else if("Queens".equals(commComboBox.getSelectedItem())){
            hosComboBox.setModel(queModel);
        }
        */
    }//GEN-LAST:event_commComboBoxActionPerformed

    private void hosComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hosComboBoxActionPerformed
        // TODO add your handling code here:
        String hospitalName = (String) hosComboBox.getSelectedItem();

        DefaultComboBoxModel docModel = new DefaultComboBoxModel(requiredDoctor(hospitalName));
        docComboBox.setModel(docModel);

        /*if ("Mass Hospital".equals(hosComboBox.getSelectedItem())){
            docComboBox.setModel(masModel);
        } else if("Arbour Hospital".equals(hosComboBox.getSelectedItem())){
            docComboBox.setModel(arbModel);
        } else if("Boston Hospital".equals(hosComboBox.getSelectedItem())){
            docComboBox.setModel(boshosModel);
        } else if("Carney Hospital".equals(hosComboBox.getSelectedItem())){
            docComboBox.setModel(carModel);
        } else if ("Bellevue Hospital".equals(hosComboBox.getSelectedItem())){
            docComboBox.setModel(bellModel);
        } else if("Calvary Hospital".equals(hosComboBox.getSelectedItem())){
            docComboBox.setModel(calModel);
        } else if("Elmhurst Hospital".equals(hosComboBox.getSelectedItem())){
            docComboBox.setModel(elmModel);
        } else if("Brookdale Hospital".equals(hosComboBox.getSelectedItem())){
            docComboBox.setModel(brooModel);
        }
        */

    }//GEN-LAST:event_hosComboBoxActionPerformed

    private void docComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docComboBoxActionPerformed

    private void bookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookBtnActionPerformed
        // TODO add your handling code here:
        boolean patientYN = false;

        lblPersonId.setText(String.valueOf(loggedinPerson.getPersonId()));

        patientYN = ifPatientExist(loggedinPerson.getPersonId());

        String docNameFull = (String)docComboBox.getSelectedItem();
        String docName = docNameFull.substring(0, docNameFull.indexOf(' '));
        Doctor doc = new Doctor();
        for(Doctor d: doctorDirectory.getDoctorList()){
            if(docName.equals(d.getDoctorFirstName())){
                doc = d;
                break;
            }
        }

        if(!patientYN){
            Patient patient = new Patient(loggedinPerson);
            patient.setPatientId(loggedinPerson.getPersonId());
            patient.setPatientDoctorId(doc.getDoctorId());
            patient.setPatientDoctorName((String) docComboBox.getSelectedItem());
            patient.setPatientHospitalName((String) hosComboBox.getSelectedItem());
            patientDirectory.addNewPatient(patient);
            System.out.println(patient.getPatientId());
            JOptionPane.showMessageDialog(this, "Appointment Confirmed ");
        }
        else{
            JOptionPane.showMessageDialog(this, "Appointment already confirmed");
        }

    }//GEN-LAST:event_bookBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        switchPanels(personViewOptionPanel);
    }//GEN-LAST:event_backBtnActionPerformed

    private void backBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtn1ActionPerformed
        // TODO add your handling code here:
        switchPanels(personViewOptionPanel);
    }//GEN-LAST:event_backBtn1ActionPerformed

    private void appointmentTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_appointmentTableKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_appointmentTableKeyReleased
private boolean userNameUnique(String username){
    
    boolean unique = false;
     
        for(Person p: personDirectory.getPersonList()){
            if(username.equals(p.getPersonUserName())){
               unique = false;
               break;
            }
            else{
                unique = true;
            }
        }

    return unique;
}

DefaultComboBoxModel nyModel = new DefaultComboBoxModel(new String[]{"Brooklyn", "Queens"});

DefaultComboBoxModel allModel = new DefaultComboBoxModel(new String[]{"Mass Hospital", "Arbour Hospital"});
DefaultComboBoxModel charModel = new DefaultComboBoxModel(new String[]{"Boston Hospital", "Carney Hospital"});
DefaultComboBoxModel broModel = new DefaultComboBoxModel(new String[]{"Bellevue Hospital", "Calvary Hospital"});
DefaultComboBoxModel queModel = new DefaultComboBoxModel(new String[]{"Elmhurst Hospital", "Brookdale Hospital"});

DefaultComboBoxModel masModel = new DefaultComboBoxModel(new String[]{"Ann Anand", "Carl Ugi"});
DefaultComboBoxModel arbModel = new DefaultComboBoxModel(new String[]{"Fran Hawkins", "Lenny Chan"});
DefaultComboBoxModel boshosModel = new DefaultComboBoxModel(new String[]{"Priti Pap", "Mukul Kellogg"});
DefaultComboBoxModel carModel = new DefaultComboBoxModel(new String[]{"Sunita Kumar", "Dev Janson"});
DefaultComboBoxModel bellModel = new DefaultComboBoxModel(new String[]{"John Solos", "Krista Fu"});
DefaultComboBoxModel calModel = new DefaultComboBoxModel(new String[]{"Faisal Carlson", "Nigel Tyr"});
DefaultComboBoxModel elmModel = new DefaultComboBoxModel(new String[]{"Elin Lim", "Michael Kale"});
DefaultComboBoxModel brooModel = new DefaultComboBoxModel(new String[]{"Sani Cherry", "Alison Merry"});

 /*DefaultComboBoxModel cityModel = new DefaultComboBoxModel(requiredCity());
        cityComboBox1.setModel(cityModel);*/

private String[] requiredCity(){
        
        String[] cityNames = new String[10];
        int i =0;
        
        for(City c: cityList){
        cityNames[i] = c.getCityName();
        i++;
        }
        
        return cityNames;
    }

private int getUniqueId() {
        
        int randomPIN = (int)(Math.random()*90000)+10000;
        for(Person person : personDirectory.getPersonList()){
            if(person.getPersonId()== randomPIN){
                getUniqueId();
            }
        }
        return randomPIN;
    }

    private boolean ifPatientExist(int id) {
        
        boolean exists = false;
        
        for(Patient patient : patientDirectory.getPatientList()){
            if(patient.getPatientId() == id){
            exists = true;
            }
        }
        return exists;
    }
    
    private void switchPanels(Component component) {
        jLayeredPane1.removeAll();
        jLayeredPane1.add(component);
        jLayeredPane1.revalidate();
        jLayeredPane1.repaint();
    }
    
    private String[] requiredCommunity(String cityName){
        
        String[] communityNames = new String[10];
        int i =0;
        
        int cityId = 0;
        
        for(City c: cityList){
            if(c.getCityName().equals(cityName)){
                cityId = c.getCityId();
                break;
            }
        }
        
        for(Community c: communityDirectory.getCommunityList()){
            if(c.getCityID() == cityId){
                communityNames[i] = c.getCommunityAddress();
                i++;
            }
        }
        
        return communityNames;
    }
    
    private String[] requiredHospital(String communityName){
        
        String[] hospitalNames = new String[10];
        int i =0;
        
        int commId = 0;
        
        for(Community com: communityDirectory.getCommunityList()){
            if(com.getCommunityAddress().equals(communityName)){
                commId = com.getCommunityID();
                break;
            }
        }
        
        for(Hospital h: hospitalDirectory.getHospitalList()){
            if(h.getHospitalCommId() == commId){
                hospitalNames[i] = h.getHospitalName();
                i++;
            }
        }
        
        return hospitalNames;
    }
    
    private String[] requiredDoctor(String hospitalName){
        
        String[] doctorNames = new String[10];
        int i =0;
        
        int hosId = 0;
        
        for(Hospital hos: hospitalDirectory.getHospitalList()){
            if(hos.getHospitalName().equals(hospitalName)){
                hosId = hos.getHospitalId();
                break;
            }
        }
        
        for(Doctor doc: doctorDirectory.getDoctorList()){
            if(doc.getDoctorHosId() == hosId){
                doctorNames[i] = doc.getDoctorFirstName() + " " + doc.getDoctorLastName();
                i++;
            }
        }
        
        return doctorNames;
    }
    
    private String[] requiredHouse(String communityName){
        
        String[] houseNames = new String[10];
        int i =0;
        
        int commId = 0;
        
        for(Community com: communityDirectory.getCommunityList()){
            if(com.getCommunityAddress().equals(communityName)){
                commId = com.getCommunityID();
                break;
            }
        }
        
        for(House h: houseDirectory.getHouseList()){
            if(h.getHouseCommId() == commId){
              houseNames[i] = h.getHouseName();
              i++;
            }
        }
        
        return houseNames;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable appointmentTable;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton backBtn1;
    private javax.swing.JButton backToLoginBtn;
    private javax.swing.JButton bookBtn;
    private javax.swing.JButton btnAddNewCity;
    private javax.swing.JButton btnAddNewComm;
    private javax.swing.JButton btnAddNewHouse;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JComboBox<String> chooseHouseBox;
    private javax.swing.JComboBox<String> cityComboBox;
    private javax.swing.JComboBox<String> cityComboBox1;
    private javax.swing.JLabel cityLbl;
    private javax.swing.JComboBox<String> commComboBox;
    private javax.swing.JComboBox<String> commComboBox1;
    private javax.swing.JLabel commLbl;
    private javax.swing.JComboBox<String> docComboBox;
    private javax.swing.JLabel docLbl;
    private javax.swing.JTable encounterTable;
    private javax.swing.JButton findDocBtn;
    private javax.swing.JComboBox<String> genderComboBox;
    private javax.swing.JLabel headingLbl;
    private javax.swing.JLabel headingLbl1;
    private javax.swing.JLabel headingLbl2;
    private javax.swing.JLabel headingLbl3;
    private javax.swing.JComboBox<String> hosComboBox;
    private javax.swing.JLabel hosLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAge1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblComm;
    private javax.swing.JLabel lblFname;
    private javax.swing.JLabel lblHouseNo;
    private javax.swing.JLabel lblHouseNo1;
    private javax.swing.JLabel lblHouseNo2;
    private javax.swing.JLabel lblLname;
    private javax.swing.JLabel lblPersonId;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblUserName1;
    private javax.swing.JLabel lblage;
    private javax.swing.JLabel lblfname;
    private javax.swing.JLabel lbllname;
    private javax.swing.JLabel lblpassword;
    private javax.swing.JLabel lblusername;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JLabel personIdLbl;
    private javax.swing.JPanel personPanel;
    private javax.swing.JButton personRegisterBtn;
    private javax.swing.JPanel personViewOptionPanel;
    private javax.swing.JButton registerBtn;
    private javax.swing.JPanel registerPanel;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtFname;
    private javax.swing.JTextField txtLname;
    private javax.swing.JTextField txtPass;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextField txtuserName;
    private javax.swing.JPanel viewEncounterPanel;
    // End of variables declaration//GEN-END:variables
}
